image: $CI_REGISTRY/signageos/docker-node:12.16.1-alpine-build

stages:
  - prepare
  - test
  - build
  - publish
  - release

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
    - node_modules/

before_script:
  - export VERSION=`cat ./VERSION`
  - export TAG=$([ "$CI_COMMIT_TAG" == "" ] && echo $CI_COMMIT_REF_NAME || echo $(echo ${VERSION}-latest | sed -E 's/^[0-9]+.[0-9]+.[0-9]+-([a-zA-Z0-9]+)(\.[0-9]+)?(-[a-zA-Z0-9]+)?$/\1/p' | tail -n1))
  - npx --userconfig ./.npmrc @signageos/lib version-upgrade $VERSION
  - mkdir -p dist
  - npm install --ignore-scripts

prepare:
  image: $CI_REGISTRY/signageos/docker:master
  stage: prepare
  before_script: []
  script:
    - ci-prepare
  artifacts:
    when: on_success
    paths:
      - ./VERSION

test:general:
  stage: test
  except:
    - tags
  script:
    - npm test
  needs:
    - prepare

test:lint:
  stage: test
  except:
    - tags
  script:
    - if [ `find test* -type f -print0 | xargs -0 grep "\.only" | wc -l` -gt 0 ]; then echo "You forgot the .only in tests" && exit 1; fi
    - npm run lint
  needs:
    - prepare

test:changelog:
  image: $CI_REGISTRY/signageos/docker:master
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - ci-test-changelog
  needs:
    - prepare

test:check:
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - npm run check
  needs:
    - prepare

build:
  stage: build
  needs:
    - prepare
  script:
    - npm run prepare --production
    - npm run escheck
  artifacts:
    when: on_success
    paths:
      - dist/
      - es6/

publish:npm:
  stage: publish
  needs:
    - prepare
    - build
  script:
    - npm publish --ignore-scripts --tag $TAG

publish:npm-public:
  stage: publish
  only:
    - tags
  needs:
    - prepare
    - build
  script:
    - export NPM_REGISTRY_URL=https://registry.npmjs.org/
    - export NPM_REGISTRY_HOST=registry.npmjs.org
    - export NPM_AUTH_TOKEN=$PUBLIC_NPM_AUTH_TOKEN
    - tools/prepare-npm-public.sh
    - npm publish --ignore-scripts --tag $TAG

release:tag:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - master
  when: manual
  allow_failure: false
  before_script: []
  script:
    - ci-release-tag
  needs:
    - prepare
    - build
    - test:general
    - test:changelog
    - test:check
    - test:lint

release:notes:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - tags
  script:
    - ci-release-notes
  needs:
    - prepare
    - publish:npm
